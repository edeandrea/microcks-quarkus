name: release
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to release'
        required: true
      version:
        description: 'Release version'
        required: true
      nextVersion:
        description: 'Next version after release (-SNAPSHOT will be added automatically)'
        required: true
permissions:
  contents: write
  deployments: write
  id-token: write
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch }}

      - name: Set up JDK 17 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
          cache: maven

      - name: Set release version
        run: mvn --no-transfer-progress --batch-mode versions:set -DnewVersion=${{ github.event.inputs.version }}

#      - name: Commit & Push changes
#        uses: actions-js/push@v1.5
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          message: Releasing version ${{ github.event.inputs.version }}

      - name: Commit, push and tag changes
        run: |
          git config user.name "microcks-bot"
          git config user.email "info@microcks.io"
          git commit -m "Releasing version ${{ github.event.inputs.version }}" .
          git push origin ${{ github.event.inputs.branch }}
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

      - name: Stage release artifacts
        run: mvn --no-transfer-progress --batch-mode -Prelease clean deploy -DaltDeploymentRepository=local::file:./target/staging-deploy

      - name: Publish package with JReleaser
        env:
          JRELEASER_NEXUS2_USERNAME: ${{ secrets.JRELEASER_NEXUS2_USERNAME }}
          JRELEASER_NEXUS2_PASSWORD: ${{ secrets.JRELEASER_NEXUS2_PASSWORD }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -Prelease jreleaser:full-release

      # Persist logs
      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-release
          path: |
            target/jreleaser/trace.log
            target/jreleaser/output.properties

      - name: Set next iteration version
        run: mvn --no-transfer-progress --batch-mode versions:set -DnewVersion=${{ github.event.inputs.nextVersion }}

#      - name: Commit & Push changes
#        uses: actions-js/push@v1.5
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          message: Setting SNAPSHOT version ${{ github.event.inputs.nextVersion }}-SNAPSHOT

      - name: Commit, push and tag changes
        run: |
          git commit -m "Setting SNAPSHOT version ${{ github.event.inputs.nextVersion }}-SNAPSHOT" .
          git push origin ${{ github.event.inputs.branch }}